{
	"id": "6a5d550d-47a0-4037-9629-c4271ad26a65",
	"name": "Payment Initiation",
	"values": [
		{
			"key": "baseUrl",
			"value": "https://61f0f498-8e41-4907-af31-2f8b63f5be0b.mock.pstmn.io",
			"type": "text",
			"enabled": true
		},
		{
			"key": "Postman_APIKey",
			"value": "",
			"type": "secret",
			"enabled": true
		},
		{
			"key": "GitHub_PAT",
			"value": "",
			"type": "secret",
			"enabled": true
		},
		{
			"key": "code_getGitHubArtifact",
			"value": "/*\n * Example showing the code to retrieve snippets from GitHub\n * for use as pre-reqiuest scripts. Stored in the code_getGitHubArtifact\n * environment variable.\n * \n * NOTE: Pushing this code to the SCM WILL NOT update it in relevant collections.  Copy and paste it into \n * the Environment variable in the Postman UX.\n*/\n\n//Setup the URL components\nvar ghci = JSON.parse(pm.collectionVariables.get('gh_config'));\nconsole.log(ghci);\ntoken = pm.environment.get(\"GitHub_PAT\");\nfor(i = 0; i < ghci.files.length; i++)\n{\n    var file = ghci.files[i];\n    \n    baseUrl = 'https://api.github.com'\n    //Build the URL.  If ref is defined and not '', append it to pull from the specific ref (branch)\n    var url = baseUrl + \"/repos/\" + ghci.slug + \"/contents/\" + file.path + ((ghci.ref === undefined || ghci.ref === null || ghci.ref === '') ? '' : '?ref=' + ghci.ref);\n    const postRequest = {\n    url: url,\n    method: 'get',\n    header: {\n    'Content-Type': 'application/json',\n    'Authorization': 'bearer ' + token\n    }\n    };\n    sendRequest(postRequest, file.target);\n}    \n    \nfunction sendRequest(postRequest, target) {\n    \n    pm.sendRequest(postRequest, (err,res) =>  {\n        //JSON-ize the response\n        var jsonData = JSON.parse(res.text());\n        //Get the base64 git BLOB data from the response\n        var base64content = jsonData.content;\n        //Decode the base64\n        var buff = Buffer.from(base64content, 'base64');\n        //Drop the decoded content to a UTF8 string\n        var content = buff.toString('ascii');\n        //Set the value of the collection variable \n        pm.collectionVariables.set(target, content);\n    });\n}\n",
			"type": "default",
			"enabled": true
		},
		{
			"key": "ct_runtime_schemaPath",
			"value": "",
			"type": "any",
			"enabled": true
		},
		{
			"key": "GitHub_RepoSlug",
			"value": "BidnessForB/dynamic-scripts",
			"type": "default",
			"enabled": true
		},
		{
			"key": "GitHub_RepoRef",
			"value": "true-bootstrap",
			"type": "default",
			"enabled": true
		}
	],
	"_postman_variable_scope": "environment",
	"_postman_exported_at": "2023-05-08T23:45:46.471Z",
	"_postman_exported_using": "Postman/10.13.6-230427-1303"
}